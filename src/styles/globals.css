@import 'tailwindcss';
@plugin 'tailwindcss-animate';
@plugin '@tailwindcss/typography';

@custom-variant dark (&:where(.dark, .dark *));
/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/

@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@theme {
  --breakpoint-xs: 380px;
  --breakpoint-sm: 640px;
  --breakpoint-md: 768px;
  --breakpoint-lg: 1024px;
  --breakpoint-xl: 1280px;
  --breakpoint-2xl: 1440px;
  --breakpoint-3xl: 1536px;

  --animation-in: in 0.6s both;
  --animation-in-reverse: in-reverse 0.6s both;
  --animation-in-from-right: in-from-right 0.3s both;
  --animation-out-from-right: out-from-right 0.3s both;
}

@utility container {
  margin-inline: auto;
  padding-inline: 2rem;
}

@utility hardware-accelerated {
  @apply will-change-transform;
  transform: translateZ(0);
}

@utility scrollbar-hide {
  &::-webkit-scrollbar {
    display: none;
  }
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

@layer utilities {
  input[type='search']::-webkit-search-cancel-button {
    display: none;
  }

  input:-webkit-autofill,
  input:-webkit-autofill:hover,
  input:-webkit-autofill:focus {
    transition: background-color 5000s ease-in-out 0s;
  }

  .button-animate-success {
    animation: success-animation 0.6s ease-in-out forwards;
  }

  .button-animate-error {
    animation: error-animation 0.6s ease-in-out forwards;
  }

  .button-animate-sending {
    animation: sending-animation 0.6s ease-in-out forwards;
  }
}

@keyframes in {
  '0%': {
    transform: 'translateY(18px)';
    opacity: 0;
  }
  ,
  '100%': {
    transform: 'translateY(0)';
    opacity: 1;
  }
}

@keyframes in-reverse {
  '0%': {
    transform: 'translateY(-18px)';
    opacity: 0;
  }
  , 
  '100%': {
    transform: 'translateY(0px)';
    opacity: 1;
  }
}

@keyframes in-from-right {
  '0%': {
    transform: 'translateX(100%)';
    opacity: 0;
  }
  , 
  '100%': {
    transform: 'translateX(0)';
    opacity: 1;
  }
}

@keyframes out-from-right {
  '0%': {
    transform: 'translateX(0)';
    opacity: 0;
  }
  , 
  '100%': {
    transform: 'translateX(100%)';
    opacity: 1;
  }
}

@keyframes pulse {
  0% {
    box-shadow:
      0px 0px 52px #6166dc,
      0px 0px 20px #d2a8ff,
      inset 0px 1px 3px rgba(255, 255, 255, 0.22);
  }
  70% {
    box-shadow:
      0px 0px 70px #6166dc,
      0px 0px 40px #d2a8ff,
      inset 0px 1px 3px rgba(255, 255, 255, 0.22);
  }
  100% {
    box-shadow:
      0px 0px 52px #6166dc,
      0px 0px 20px #d2a8ff,
      inset 0px 1px 3px rgba(255, 255, 255, 0.22);
  }
}

@keyframes sending-animation {
  0% {
    background-color: #dbeafe;
    transform: scale(1);
  }
  50% {
    background-color: #bfdbfe; /* Blue sending color */
    transform: scale(1.02);
  }
  100% {
    background-color: #bfdbfe;
    transform: scale(1);
  }
}

@keyframes error-animation {
  0% {
    background-color: #fee2e2; /* Original button color */
    transform: scale(1);
  }
  50% {
    background-color: #fecaca; /* Green success color */
    transform: scale(1.02);
  }
  100% {
    background-color: #fecaca;
    transform: scale(1);
  }
}

@keyframes success-animation {
  0% {
    background-color: #dcfce7;
    transform: scale(1);
  }
  50% {
    background-color: #bbf7d0; /* Red error color */
    transform: scale(1.02);
  }
  100% {
    background-color: #bbf7d0;
    transform: scale(1);
  }
}
